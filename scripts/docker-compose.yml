version: '3'
services:

  db:
    image: mongo:4.0.8
    container_name: db
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: {MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: {MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: db
      MONGODB_DATA_DIR: /db/data
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - dbdata:/db/data
      - ./db/init.js:/mongo-init.js:ro
    networks:
      - backend

  app:
    build:
      context: app
      dockerfile: Dockerfile
    image: nikolaik/python-nodejs:python3.8-nodejs14-alpine
    container_name: app
    restart: unless-stopped
    environment:
      MODE: "deployment"
      SECRET_KEY: {SECRET_KEY}
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: db
      MONGODB_USERNAME: {MONGODB_USERNAME}
      MONGODB_PASSWORD: {MONGODB_PASSWORD}
      MONGODB_HOSTNAME: db
    volumes:
      - appdata:/var/www
    depends_on:
      - db
    networks:
      - frontend
      - backend

  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    image: digitalocean.com/webserver:latest
    container_name: nginx
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "nginx"
      APP_DEBUG: "true"
      SERVICE_NAME: "nginx"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
      - appdata:/var/app/
    depends_on:
      - app
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  appdata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '{APP_DIR}'
  
  dbdata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '{DB_DIR}'
  
  nginxdata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '{NGINX_DIR}'